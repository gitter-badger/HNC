
ATTR Root
	[
	|
	|
		leanDefinition USE {:} {[]} : {[LeanDefinition]}

	]

ATTR ASTDefinition
	[
	|
	|
		leanDefinition : LeanDefinition
	]
SEM ASTDefinition
	| Definition
		lhs.leanDefinition = LeanDefinition $ "definition " ++ @name ++ " : " ++ showT @loc.definitionType ++ " := " ++ show @where.sem

SEM ASTLetIn
	| Let
		lhs.leanDefinition = LeanDefinition "xxx"
{
extractLean def inh = showRoot $ leanDefinition_Syn_Root $ wrap_Root (sem_Root def) inh

data LeanDefinition
	= LeanDefinition String
	| LeanLet deriving Show

showRoot x = show (head x) ++ "\n"

showT (TD a b) = a ++ " " ++ joinStr " " (map showT b)
showT (T x) = x
showT x = show x
}
