
ATTR Root
	[ | | leanDefinition USE {:} {[]} : {[String]} ]

ATTR ASTDefinition
	[ | | leanDefinition : String ]

ATTR ASTLetIn ASTExpression
	[ | | lean' : ASTExpression ]

ATTR ExpressionList [ | | lean' USE {:} {[]} : {[ASTExpression]} ]

SEM ASTDefinition
	| Definition
		lhs.leanDefinition = "definition " ++ @name ++ " : " ++ showT @loc.definitionType ++ " := " ++ showE @where.lean'

SEM ASTLetIn
	| In
		lhs.lean' = @value.lean'

SEM ASTExpression
	| Constant
		lhs.lean' = Constant @c
	| Atom
		lhs.lean' = Atom @name
	| Application
		lhs.lean' = Application @fn.lean' @arg.lean'

{
extractLean def inh = showRoot $ leanDefinition_Syn_Root $ wrap_Root (sem_Root def) inh

showRoot x = head x ++ "\n"

showT (TD a b) = a ++ " " ++ joinStr " " (map showT b)
showT (T x) = x
showT x = show x
}
