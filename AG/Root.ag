WRAPPER Root

TYPE Root = [ASTDefinition]

ATTR Root
	[
		library : {M.Map String T}
	|
	|
		cppDefinition USE {:} {[]} : {[CppDefinition]}
	]

SEM Root
	| Cons
		hd.level = 0
		hd.counter = 0
		hd.generalizedTypes = (\t -> (typeTv t, t)) <$> @lhs.library
		hd.definitionTypes = @lhs.library
		hd.qualifiers = const (CppFqMethod "ff") <$> @lhs.library
		hd.finalSubstitution = void @hd.generalizedTypeM
		hd.parent = "OH,PARENT (ASSERTION)"
		hd.isLocalVar = False
		tl.library = M.insert @hd.name @hd.definitionType @lhs.library

{
-- фронтэнд к API атрибутной грамматики.
compile2 def inh = cppDefinition_Syn_Root $ wrap_Root (sem_Root def) inh
}
